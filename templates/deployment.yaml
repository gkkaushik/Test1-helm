
apiVersion: apps/v1
{{- if .Values.useStatefulset }}
kind: StatefulSet
{{- else }}
kind: Deployment
{{- end }}
metadata:
  name: {{ include "fullname" . }}
  labels:
    {{- include "labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicasCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "selectorLabels" . | nindent 6 }}
  {{- if not .Values.useStatefulset }}
  strategy:
{{ toYaml .Values.deploymentStrategy | indent 4 }}
  {{- end }}
  {{- if .Values.useStatefulset }}
  serviceName: {{ include "" . }}
  {{- end }}
  template:
    metadata:
      labels:
        {{- include "" . | nindent 8 }}
      annotations:
{{ toYaml .Values.podAnnotations | indent 8 }}
    spec:
      serviceAccountName: {{ template "" . }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      {{- if .Values.priorityClassName }}
      priorityClassName: "{{ .Values.priorityClassName }}"
      {{- end }}
      containers:
      - name: sqlproxy
        image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
        imagePullPolicy: {{ default "" .Values.image.pullPolicy | quote }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        command:
        - -instances={{- range .Values-}}
                        {{ .project }}:{{ .region }}:{{ .instance }}=tcp:0.0.0.0:{{ .port }},
                     {{- end }}
        {{ if $hasCredentials -}}
        - -credential_file={{ include "" . }}
        {{ end -}}
        {{- range $key, $value := .Values.extraArgs }}
        - --{{ $key }}={{ $value }}
        {{- end }}
        {{- if .Values.lifecycleHooks }}
        lifecycle:
{{ toYaml .Values.lifecycleHooks | indent 10 }}
        {{- end }}
        ports:
        {{- range .Values.cloudsql.instances }}
        {{- $instanceShortName := include "" . }}
        - name: {{ $instanceShortName }}
          containerPort: {{ .port }}
        {{- end }}
        {{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          tcpSocket:
            port: {{ .Values.livenessProbe.port }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        {{- end }}
        {{- if .Values.readinessProbe.enabled }}
        readinessProbe:
          tcpSocket:
            port: {{ .Values.readinessProbe.port }}
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
        {{- end }}
       volumes:
      {{ if $hasCredentials -}}
      - name: 
        secret:
          secretName: {{ include "" }}
      {{ end -}}
      - name: 
        emptyDir: {}
      {{ if .Values.haproxy.enabled }}
      - name: 
        configMap:
          name: {{ include "fullname" }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
{{- end }}

